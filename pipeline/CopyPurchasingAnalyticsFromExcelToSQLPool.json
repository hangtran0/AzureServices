{
	"name": "CopyPurchasingAnalyticsFromExcelToSQLPool",
	"properties": {
		"activities": [
			{
				"name": "CopyPurchasingAnalytics",
				"description": "Copy the PurchasingAnalytics Excel To SQL Pool DW",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Start Log - Return ProcessID",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "@{pipeline().parameters.P_ContainerRawFiles}//Purchasing Analytics.xlsx"
					},
					{
						"name": "Destination",
						"value": "@{pipeline().parameters.P_DBSchema}.@{replace(pipeline().parameters.P_ExcelTableName, ' ', '')}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "ExcelSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "SqlDWSink",
						"preCopyScript": {
							"value": "IF Object_id('@{pipeline().parameters.P_DBSchema}.@{pipeline().parameters.P_TableName}', 'U') IS NOT NULL\nTRUNCATE TABLE @{pipeline().parameters.P_DBSchema}.@{pipeline().parameters.P_TableName}",
							"type": "Expression"
						},
						"allowPolyBase": true,
						"polyBaseSettings": {
							"rejectValue": 0,
							"rejectType": "value",
							"useTypeDefault": true
						},
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2
				},
				"inputs": [
					{
						"referenceName": "PurchasingAnalyticseExcelDS",
						"type": "DatasetReference",
						"parameters": {
							"P_VaultURI_StorageAccount": {
								"value": "@pipeline().parameters.P_AKV_VaultURI",
								"type": "Expression"
							},
							"P_SerectName_StorageAccount": {
								"value": "@pipeline().parameters.P_SerectName_StorageAccount",
								"type": "Expression"
							},
							"P_ContainerRawFiles": {
								"value": "@pipeline().parameters.P_ContainerRawFiles",
								"type": "Expression"
							},
							"P_ExcelTableName": {
								"value": "@pipeline().parameters.P_ExcelTableName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ASynapsePurchaseTableDS",
						"type": "DatasetReference",
						"parameters": {
							"P_AKV_VaultURI_SQLPool": {
								"value": "@pipeline().parameters.P_AKV_VaultURI",
								"type": "Expression"
							},
							"P_AKU_SecretName_SQLPool": {
								"value": "@pipeline().parameters.P_AKU_SecretName_SQLPool",
								"type": "Expression"
							},
							"P_DBSchema": {
								"value": "@pipeline().parameters.P_DBSchema",
								"type": "Expression"
							},
							"P_TableName": {
								"value": "@pipeline().parameters.P_TableName",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "End - Log Passed",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "CopyPurchasingAnalytics",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[log].[sp_EndETLProcessLog]",
					"storedProcedureParameters": {
						"ETLProcessID": {
							"value": {
								"value": "@activity('Start Log - Return ProcessID').output.firstRow.ETLProcessID",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"Status": {
							"value": "PASSED",
							"type": "String"
						},
						"ErrorMessage": {
							"value": null
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SQLPool_ddo_azuresqldw_dw",
					"type": "LinkedServiceReference",
					"parameters": {
						"P_AKV_VaultURI_SQLPool": {
							"value": "@pipeline().parameters.P_AKV_VaultURI",
							"type": "Expression"
						},
						"P_AKU_SecretName_SQLPool": {
							"value": "@pipeline().parameters.P_AKU_SecretName_SQLPool",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "End - Log Failed",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "CopyPurchasingAnalytics",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[log].[sp_EndETLProcessLog]",
					"storedProcedureParameters": {
						"ETLProcessID": {
							"value": {
								"value": "@activity('Start Log - Return ProcessID').output.firstRow.ETLProcessID",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"Status": {
							"value": "FAILED",
							"type": "String"
						},
						"ErrorMessage": {
							"value": {
								"value": "@activity('CopyPurchasingAnalytics').output.errors[0].Message",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SQLPool_ddo_azuresqldw_dw",
					"type": "LinkedServiceReference",
					"parameters": {
						"P_AKV_VaultURI_SQLPool": {
							"value": "@pipeline().parameters.P_AKV_VaultURI",
							"type": "Expression"
						},
						"P_AKU_SecretName_SQLPool": {
							"value": "@pipeline().parameters.P_AKU_SecretName_SQLPool",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Start Log - Return ProcessID",
				"description": "Insert a new record into table [log].[ETLProcessLog] and return ID",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderStoredProcedureName": "[log].[sp_StartETLProcessLog]",
						"storedProcedureParameters": {
							"ProcessName": {
								"type": "String",
								"value": {
									"value": "@{pipeline().Pipeline}_@{pipeline().parameters.P_DBSchema}.@{pipeline().parameters.P_TableName}",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ASynapsePurchaseTableDS",
						"type": "DatasetReference",
						"parameters": {
							"P_AKV_VaultURI_SQLPool": {
								"value": "@pipeline().parameters.P_AKV_VaultURI",
								"type": "Expression"
							},
							"P_AKU_SecretName_SQLPool": {
								"value": "@pipeline().parameters.P_AKU_SecretName_SQLPool",
								"type": "Expression"
							},
							"P_DBSchema": "dbo",
							"P_TableName": "DimDates"
						}
					},
					"firstRowOnly": true
				}
			}
		],
		"parameters": {
			"P_SerectName_StorageAccount": {
				"type": "string",
				"defaultValue": "StorageAccount-mdwdostordevpoc"
			},
			"P_ContainerRawFiles": {
				"type": "string",
				"defaultValue": "raw-purchase"
			},
			"P_ExcelTableName": {
				"type": "string",
				"defaultValue": "Dim Vendors"
			},
			"P_AKV_VaultURI": {
				"type": "string",
				"defaultValue": "https://akv-dev-sqt.vault.azure.net/"
			},
			"P_AKU_SecretName_SQLPool": {
				"type": "string",
				"defaultValue": "SQLPool-HangSQLPool-Learn1"
			},
			"P_DBSchema": {
				"type": "string"
			},
			"P_TableName": {
				"type": "string"
			}
		},
		"annotations": []
	}
}